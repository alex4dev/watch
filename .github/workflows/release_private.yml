name: Build and Deploy APK for test (Upload - Create Artifact To Github Action)

env:
  # The name of the main module repository
  main_project_module: app


on:

  push:
    branches:
      - 'release/**'

  # Allows you to run this workflows manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4

      # Set Current Date As Env Variable
      #      - name: Set current date as env variable
      #        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      #      - name: Set repository name as env variable
      #        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'
          cache: 'gradle'

      #      - name: Change wrapper permissions
      #        run: chmod +x ./gradlew

      # Run Tests Build
      - name: Run gradle tests
        run: ./gradlew test

      # Run Build Project
      - name: Build gradle project
        run: ./gradlew build

      # Create APK Release
      - name: Build apk release project (APK) - ${{ env.main_project_module }} module
        run: ./gradlew assembleRelease --stacktrace

      - name: Find APK file
        id: releaseApk
        run: |
          $apkfile = Get-ChildItem -Path app/build/outputs/apk/release -Filter *.apk | Select-Object -First 1
          echo "apkfile=$($apkfile.FullName)" >> $GITHUB_OUTPUT
        shell: powershell

      #      - name: Decode and save Firebase service account key
      #        env:
      #          FIREBASE_SERVICE_ACCOUNT_KEY: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
      #        run: |
      #          echo $CREDENTIAL_FILE_CONTENT | base64 --decode > firebase-service-account-key.json
      - name: Decode and save Firebase service account key
        env:
          FIREBASE_SERVICE_ACCOUNT_KEY: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
        run: |
          [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($env:FIREBASE_SERVICE_ACCOUNT_KEY)) | Out-File -FilePath firebase-service-account-key.json -Encoding utf8
        shell: powershell


      #      - name: Upload artifact to Firebase App Distribution
      #        uses: wzieba/Firebase-Distribution-Github-Action@v1
      #        with:
      #          appId: ${{secrets.FIREBASE_APP_ID}}
      #          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
      #          groups: testers
      #          file: ${{ steps.releaseApk.outputs.apkfile }}

      - name: Upload to Firebase App Distribution
        run: ./gradlew appDistributionUploadRelease
        env:
          firebaseAppDistributionAppId: ${{ secrets.FIREBASE_APP_ID }}
          firebaseAppDistributionFile: ${{ github.workspace }}/firebase-service-account-key.json
          firebaseAppDistributionGroups: testers  # Or any other group